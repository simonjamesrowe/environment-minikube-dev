tekton:
{{- if eq .Requirements.webhook "prow" }}
  enabled: true
{{- else if eq .Requirements.webhook "lighthouse" }}
  enabled: true
{{- else }}
  enabled: false
{{- end }}

# Use cert-manager 0.11 CRDs/APIs with Dex
dex:
  certs:
    newApi: true

mongo:
  rootPassword: {{ .Parameters.mongo.rootPassword }}
  username: root
  port: "27017"
  hostname: jenkins-x-mongodb.jx

cms:
  jwtSigningKey: {{ .Parameters.strapi.jwtSigningKey}}

htpasswd: {{ .Parameters.adminUser.htpasswd}}

elasticsearch:
  esJavaOpts: -Xmx256m -Xms256m
  replicas: 1
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 5Gi
  resources:
    requests:
      cpu: 500m
      memory: 512M
    limits:
      cpu: 500m
      memory: 512M
kibana:
  resources:
    requests:
      cpu: 500m
      memory: 256M
    limits:
      cpu: 500m
      memory: 256M
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    path: /
    hosts:
      - kibana.simonjamesrowe.com
    tls:
      - secretName: tls-simonjamesrowe-com-p
        hosts:
         - kibana.simonjamesrowe.com
cp-helm-charts:
  ## ------------------------------------------------------
  ## Zookeeper
  ## ------------------------------------------------------
  cp-zookeeper:
    enabled: true
    servers: 1
    heapOptions: "-Xms128M -Xmx128M"
    persistence:
      enabled: true
      dataDirSize: 5Gi
      dataLogDirSize: 5Gi
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  cp-kafka:
    enabled: true
    brokers: 1
    heapOptions: "-Xms256M -Xmx256M"
    persistence:
      enabled: true
      size: 5Gi
      disksPerBroker: 1
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 200m
        memory: 256Mi
    securityContext:
      runAsUser: 0

  cp-schema-registry:
    enabled: false
    replicaCount: 0

  cp-kafka-rest:
    enabled: false
    replicaCount: 0

  cp-kafka-connect:
    enabled: false
    replicaCount: 0

  cp-ksql-server:
    enabled: false
    replicaCount: 0

  cp-control-center:
    enabled: false
    replicaCount: 0

gradle:
  initScript: |-
    allprojects {

        apply plugin: 'maven-publish'

        repositories {
            maven {
                url "http://nexus/repository/maven-group/"
            }
            mavenCentral()
        }

      publishing {
            repositories {
                maven {
                    def releasesRepoUrl = "http://nexus/repository/maven-releases/"
                    def snapshotsRepoUrl = "http://nexus/repository/maven-snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username "{{ .Parameters.adminUser.username }}"
                        password "{{ .Parameters.adminUser.password }}"
                    }
                }
            }
        }

       configurations.all {
          resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
          resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
       }
    }