apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-magic
spec:
  selector:
    matchLabels:
      app: kafka-magic
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-magic
      annotations: {}
    spec:
      containers:
      - name: kafka-magic
        image: digitsy/kafka-magic
        imagePullPolicy: Always
        env:
        - name: KMAGIC_ALLOW_TOPIC_DELETE
          value: "true"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-magic
  annotations:
    fabric8.io/expose: "false"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: kafka-magic
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-type: basic
  labels:
    app: kafka-magic
  name: kafka-magic
spec:
  rules:
  - host: kafka-magic.simonjamesrowe.com
    http:
      paths:
      - backend:
          serviceName: kafka-magic
          servicePort: 80
        path: /
  tls:
  - hosts:
    - kafka-magic.simonjamesrowe.com
    secretName: tls-simonjamesrowe-com-p

